initSidebarItems({"struct":[["InvertedUInt","Inverted UInt (has most significant digit on the outside)"],["InvertedUTerm","Terminating character for `InvertedUInt`s"]],"trait":[["BitDiff","Gives SizeOf(Lhs) - SizeOf(Rhs)"],["Invert","Converts between standard numbers and inverted ones that have the most significant digit on the outside."],["InvertedUnsigned","Inverted unsigned numbers"],["PrivateAnd","Does the real anding for `UInt`s; `And` just calls this and then `Trim`."],["PrivateCmp",""],["PrivateDiv",""],["PrivateDivFirstStep",""],["PrivateInvert","Doubly private! Called by invert to make the magic happen once its done the first step. The Rhs is what we've got so far."],["PrivatePow",""],["PrivateSizeOf",""],["PrivateSub","Does the real subtraction for `UInt`s; `Sub` just calls this and then `Trim`."],["PrivateXor","Does the real xoring for `UInt`s; `Xor` just calls this and then `Trim`."],["ShiftDiff","Performs Shl on Lhs so that SizeOf(Lhs) = SizeOf(Rhs) Fails if SizeOf(Lhs) > SizeOf(Rhs)"],["Trim","Convenience trait. Calls Invert -> TrimTrailingZeros -> Invert"],["TrimTrailingZeros","Gets rid of all zeros until it hits a one."]]});